{
  "General Provider Interactor": {
    "prefix": "gpi",
    "body": [
      "",
      "import React, { createContext, useContext } from \"react\";",
      "",
      "type Provider${Component}Value = ReturnType<typeof useInteractor>;",
      "",
      "const ${Component}Context = createContext<Provider${Component}Value>({} as Provider${Component}Value);",
      "",
      "/**",
      " * `Provide${Component}Interactor`",
      " * This component is a wrapper for the any component that needs to use the `useLandingInteractor` hook.",
      " * Remember to add the `key` prop to like this:",
      " * ```tsx",
      " * <Provide${Component}Interactor key={Routes.SOME_SCREEN_ENUM_OR_UNIQUE_STRING>",
      " *",
      " * @param param0",
      " * @returns",
      " */",
      "export function Provide${Component}Interactor({",
      "  children,",
      "}: {",
      "  children: React.ReactNode;",
      "}) {",
      "  const provider = useInteractor();",
      "  return (",
      "    <${Component}Context.Provider value={provider}>",
      "      {children}",
      "    </${Component}Context.Provider>",
      "  );",
      "}",
      "",
      "/**",
      " * `use${Component}Interactor`",
      " * This hook is uses the useInteractor sub-hook's context",
      " * so that it can be used in any child of the provider.",
      " * It is exported so that it can be used in the `Provide${Component}Interactor`'s children.",
      " */",
      "export const use${Component}Controller = () => {",
      "  return useContext(${Component}Context);",
      "};",
      "",
      "/**",
      " * `useInteractor`",
      " * This is the actual hook that is used by the `use${Component}Interactor` hook.",
      " * This is where you put all of your logic and return the values that you want to expose.",
      " * Think of the values and hooks you dont export and being \"private\" and the ones you do export as being \"public\".",
      " */",
      "function useInteractor() {",
      "  return {};",
      "}",
      ""
    ],
    "description": "General Provider Interactor"
  }
}
